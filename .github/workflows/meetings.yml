name: Meetings Rollover

on:
  workflow_dispatch:
  schedule:
    - cron: "00 04 * * 1"  # Mondays 04:00 UTC (≈ 09:30 IST)

jobs:
  rollover:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Checkout Wiki
        run: |
          git clone "https://github.com/${GITHUB_REPOSITORY}.wiki.git" wiki

      - name: Rotate minute taker & update Upcoming Agenda
        run: |
          python3 - << 'PY'
import os
from datetime import datetime, timedelta
from zoneinfo import ZoneInfo

ROOT = os.getcwd()
WIKI_DIR = os.path.join(ROOT, 'wiki')
ROTATION_YML = os.path.join(ROOT, '.github', 'rotation.yml')
INDEX_FILE = os.path.join(WIKI_DIR, '.rotation_index.txt')
UPCOMING = os.path.join(WIKI_DIR, 'Upcoming-Meeting-Agenda.md')

# Parse rotation.yml without external deps
minute_takers = []
with open(ROTATION_YML, 'r', encoding='utf-8') as f:
    for line in f:
        s = line.strip()
        if s.startswith('- '):
            minute_takers.append(s[2:].strip())

if not minute_takers:
    raise SystemExit('No minute takers found in .github/rotation.yml')

try:
    with open(INDEX_FILE, 'r', encoding='utf-8') as f:
        idx = int(f.read().strip())
except Exception:
    idx = -1

idx = (idx + 1) % len(minute_takers)
with open(INDEX_FILE, 'w', encoding='utf-8') as f:
    f.write(str(idx))

minute_taker = minute_takers[idx]

# Compute next Tuesday in IST
now_utc = datetime.now(tz=ZoneInfo('UTC'))
now_ist = now_utc.astimezone(ZoneInfo('Asia/Kolkata'))

# weekday(): Monday=0 .. Sunday=6; Tuesday=1
days_ahead = (1 - now_ist.weekday()) % 7
if days_ahead == 0:
    days_ahead = 7  # always schedule the NEXT Tuesday
next_tuesday = (now_ist + timedelta(days=days_ahead)).date()

date_str = next_tuesday.isoformat()

content = f"""# Upcoming Meeting Agenda (Grav@CMI)

**Date:** {date_str} (Tuesday) • 14:00 IST  
**Location / Link:** _Room/Zoom URL_  
**Minute Taker (this week):** @{minute_taker}  
**Chair (optional):** _@name_

---

## 0) Logistics & Rotations
- Minute taker rotation: _@A → @B → @C → @D → @A ..._  
- Timekeeper (optional): _@name (keeps us on track)_

---

## 1) Quick Round-Robin (1 min each)
- **Since last week:** one line update / roadblock
- **Until next week:** one line priority

---

## 2) Research Updates (deep-dives, max 10–12 min)
- **Topic:** _e.g., Parametrized \(h_{\ell m}\) phasing extension_  
  **Owner:** _@name_  
  **Materials:** _[slide link] [notebook] [PR]_  
  **Questions for group:** _bullet points_

- **Topic:** _..._  
  **Owner:** _@name_  
  **Materials:** _..._

> If equations: \( \Psi(f) = 2\pi f t_c - \phi_c + \sum_k \psi_k f^{(k-5)/3} \).

---

## 3) Paper of the Week (optional)
- **Paper/title:** _link / citation_  
- **Presenter:** _@name_  
- **1–3 takeaways:** _bullets_

---

## 4) Decisions Needed
- **Decision:** _e.g., Adopt minute-taker automation?_  
  **Context:** _1–2 lines_  
  **Options:** _A / B / C_  
  **Owner:** _@name_

---

## 5) Action Items (new)
| Task | Owner | Due | Notes |
|---|---|---|---|
|  |  |  |  |

---

## 6) Parking Lot (time-permitting / move to next week)
- _Backlog items or FYIs that don’t fit this week._

---

## 7) Admin / Ops
- Conferences, travels, budgets, service work.

---

### End-of-Meeting Checklist (for the Minute Taker)
- [ ] Create a new log page from Past Meeting Log template (see Archive).
- [ ] Move finalized notes to that dated page.
- [ ] Update the Archive index and Minute taker rotation.
- [ ] Clear this page for the next week (keep skeleton sections).
"""

os.makedirs(os.path.dirname(UPCOMING), exist_ok=True)
with open(UPCOMING, 'w', encoding='utf-8') as f:
    f.write(content)
PY

      - name: Commit updates to Wiki
        run: |
          cd wiki
          git config user.name "github-actions"
          git config user.email "actions@users.noreply.github.com"
          git add -A
          git commit -m "Weekly agenda rollover"
          git push

